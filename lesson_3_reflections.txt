Github:

git config --global user.name 'Rajesh'
git config --global user.email 'dwdrajesh@yahoo.com'
git config --global user.ui 'auto'

--global : To avoid typing the above config commands for next projects on this PC

Manual pull and push in Github:
git push origin master: origin is the name of the remote repo and master is the local repo.

git pull origin master: Merges local master branch from the remote branch called 'origin'.

Fork: to use somebody's code and clone on Github account directly without downloading using 'clone'.

Steps to fork: 
a. Go to that person's Github repo, click on fork. It automatically creates a new repo on your profile
b. Copy the github repo website and Clone to your computer using: git clone github.com/dwdrajesh/recipes.git
c. Check using : git remove -v

Differences between fork, clone, branch:
Fork: Copy sb else's Github repo to your Github account, online only: Click on Fork in Github
Clone: Update the Github branch to local pc: git clone; clone sets up a remote repo called 'origin' and downloads the 'master' branch to local pc
Branch: Create a new branch from the existing HEAD commit

Fetch:
Clone sets a remote repo called origin and downloads a branch called master to local pc. However, another branch called origin/master is also downloaded that points to the HEAD of the remmote repo.
So, locally there are 2 branches: master and origin/master. When we make new commit locally, only the local master branch is updated (not the local origin/master branch).

push: updates the remote master branch based on the local master branch
pull: updates both the local master and local origin/master branch based on remote master
Fetch: only updates the local origin/master branch: git fetch origin
To view all hidden branches: git branch -a
So, pull = fetch origin + git merge master origin/master

Tip: git status compares the local master branch and local origin/master branch.

To see the log in a particular branch: git log origin/master , if branch is origin/master

Pull request:
General workflow:
1. There is a master branch on github on sb else's account
2. You fork it so a copy of the repo and the master branch is on your Github
3. You clone it to local pc: git clone origin master
4. To make your changes for a new feature, create a new branch off from local master branch, called 'newFeature'
5. Checkout the newFeature branch, add changes, commit, push to the newFeature branch (not master branch):
	git push origin newFeature
6. Now, send Pull request to the original owner on Github by going to your Github->newFeature branch->Pull request
7. After the owner accepts, your changes are pushed to the original master.
Note: You can try to see the changes on your master branch by merging as well first.


